// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tour_Packages_and_Bookings.Models;

#nullable disable

namespace Tour_Packages_and_Bookings.Migrations
{
    [DbContext(typeof(TourDbContext))]
    [Migration("20231001165624_InitiaCreate")]
    partial class InitiaCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tour_Packages_and_Bookings.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime?>("BookingDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("BookingStatus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumberOfTravelers")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TourPackageId")
                        .HasColumnType("int");

                    b.Property<string>("TravelerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BookingId");

                    b.HasIndex("TourPackageId");

                    b.ToTable("Bookings");

                    b.HasData(
                        new
                        {
                            BookingId = 1,
                            BookingDate = new DateTime(2023, 9, 7, 22, 56, 24, 423, DateTimeKind.Local).AddTicks(3708),
                            BookingStatus = "Pending",
                            NumberOfTravelers = 3,
                            PhoneNumber = "123-456-7891",
                            TourPackageId = 1,
                            TravelerName = "Traveler 1"
                        },
                        new
                        {
                            BookingId = 2,
                            BookingDate = new DateTime(2023, 9, 7, 22, 56, 24, 423, DateTimeKind.Local).AddTicks(3738),
                            BookingStatus = "Confirmed",
                            NumberOfTravelers = 4,
                            PhoneNumber = "123-456-7892",
                            TourPackageId = 2,
                            TravelerName = "Traveler 2"
                        },
                        new
                        {
                            BookingId = 3,
                            BookingDate = new DateTime(2023, 9, 20, 22, 56, 24, 423, DateTimeKind.Local).AddTicks(3747),
                            BookingStatus = "Pending",
                            NumberOfTravelers = 4,
                            PhoneNumber = "123-456-7893",
                            TourPackageId = 3,
                            TravelerName = "Traveler 3"
                        },
                        new
                        {
                            BookingId = 4,
                            BookingDate = new DateTime(2023, 9, 30, 22, 56, 24, 423, DateTimeKind.Local).AddTicks(3755),
                            BookingStatus = "Confirmed",
                            NumberOfTravelers = 3,
                            PhoneNumber = "123-456-7894",
                            TourPackageId = 4,
                            TravelerName = "Traveler 4"
                        },
                        new
                        {
                            BookingId = 5,
                            BookingDate = new DateTime(2023, 9, 3, 22, 56, 24, 423, DateTimeKind.Local).AddTicks(3763),
                            BookingStatus = "Pending",
                            NumberOfTravelers = 1,
                            PhoneNumber = "123-456-7895",
                            TourPackageId = 5,
                            TravelerName = "Traveler 5"
                        },
                        new
                        {
                            BookingId = 6,
                            BookingDate = new DateTime(2023, 9, 15, 22, 56, 24, 423, DateTimeKind.Local).AddTicks(3772),
                            BookingStatus = "Confirmed",
                            NumberOfTravelers = 2,
                            PhoneNumber = "123-456-7896",
                            TourPackageId = 1,
                            TravelerName = "Traveler 6"
                        },
                        new
                        {
                            BookingId = 7,
                            BookingDate = new DateTime(2023, 9, 26, 22, 56, 24, 423, DateTimeKind.Local).AddTicks(3781),
                            BookingStatus = "Pending",
                            NumberOfTravelers = 4,
                            PhoneNumber = "123-456-7897",
                            TourPackageId = 2,
                            TravelerName = "Traveler 7"
                        },
                        new
                        {
                            BookingId = 8,
                            BookingDate = new DateTime(2023, 9, 13, 22, 56, 24, 423, DateTimeKind.Local).AddTicks(3789),
                            BookingStatus = "Confirmed",
                            NumberOfTravelers = 3,
                            PhoneNumber = "123-456-7898",
                            TourPackageId = 3,
                            TravelerName = "Traveler 8"
                        });
                });

            modelBuilder.Entity("Tour_Packages_and_Bookings.Models.TourPackage", b =>
                {
                    b.Property<int>("TourPackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourPackageId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Destinations")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PackageType")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.HasKey("TourPackageId");

                    b.ToTable("TourPackages");

                    b.HasData(
                        new
                        {
                            TourPackageId = 1,
                            Description = "Description for Package 1",
                            Destinations = "Destination 1",
                            Duration = 3,
                            IsActive = true,
                            PackageName = "Package 1",
                            PackageType = 1,
                            Picture = "package_1.jpg",
                            Price = 4169.00m
                        },
                        new
                        {
                            TourPackageId = 2,
                            Description = "Description for Package 2",
                            Destinations = "Destination 2",
                            Duration = 9,
                            IsActive = true,
                            PackageName = "Package 2",
                            PackageType = 2,
                            Picture = "package_2.jpg",
                            Price = 1802.00m
                        },
                        new
                        {
                            TourPackageId = 3,
                            Description = "Description for Package 3",
                            Destinations = "Destination 3",
                            Duration = 6,
                            IsActive = true,
                            PackageName = "Package 3",
                            PackageType = 1,
                            Picture = "package_3.jpg",
                            Price = 1811.00m
                        },
                        new
                        {
                            TourPackageId = 4,
                            Description = "Description for Package 4",
                            Destinations = "Destination 4",
                            Duration = 5,
                            IsActive = true,
                            PackageName = "Package 4",
                            PackageType = 1,
                            Picture = "package_4.jpg",
                            Price = 4902.00m
                        },
                        new
                        {
                            TourPackageId = 5,
                            Description = "Description for Package 5",
                            Destinations = "Destination 5",
                            Duration = 4,
                            IsActive = true,
                            PackageName = "Package 5",
                            PackageType = 1,
                            Picture = "package_5.jpg",
                            Price = 1900.00m
                        });
                });

            modelBuilder.Entity("Tour_Packages_and_Bookings.Models.Booking", b =>
                {
                    b.HasOne("Tour_Packages_and_Bookings.Models.TourPackage", "TourPackage")
                        .WithMany("Bookings")
                        .HasForeignKey("TourPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TourPackage");
                });

            modelBuilder.Entity("Tour_Packages_and_Bookings.Models.TourPackage", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
